name: CMake

on:
  push:
    branches: [main, "feature/**", "release/**"]
  pull_request:
    branches: [main]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  PRESET: linux_release
  BUILD_DIR: ${{github.workspace}}/build/${PRESET}

jobs:
  ################################
  # Run Linter against code base #
  ################################
  lint:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint All
        uses: super-linter/super-linter/slim@v6.7.0
        env:
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: .
          VALIDATE_CLANG_FORMAT: true

  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    env:
      CC: clang
      CXX: clang++

    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake --preset ${{env.PRESET}}

      - name: Build
        # Build your program with the given configuration
        run: |
          cmake --build ${{env.BUILD_DIR}} --parallel
          clang-tidy -p ${{env.BUILD_DIR}} ${{env.BUILD_DIR}}/tmp_lcnsAlgebra_main.cpp
          clang-tidy -p ${{env.BUILD_DIR}} ${{env.BUILD_DIR}}/tmp_lcnsCombinatorics_main.cpp

      - name: Upload build directory to artefact
        uses: actions/upload-artifact@v4
        with:
          name: build_directory
          path: |
            ${{github.workspace}}/build

  tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build directory
        uses: actions/download-artifact@v4
        with:
          name: build_directory
          path: build

      - name: Update mode for test executable
        run: |
          chmod +x ${{env.BUILD_DIR}}/algebra/tests/testVector
          chmod +x ${{env.BUILD_DIR}}/algebra/tests/testMatrix
          chmod +x ${{env.BUILD_DIR}}/algebra/tests/testQuaternion
          chmod +x ${{env.BUILD_DIR}}/algebra/tests/testMapping

      - name: Test algebra module
        run: ctest -C ${{env.BUILD_TYPE}} --test-dir ${{env.BUILD_DIR}}/algebra/tests --output-on-failure --parallel

      - name: Clean build directory artifact
        uses: geekyeggo/delete-artifact@v5
        with:
          name: build_directory
